{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","calculateWinner","squares","lines","i","length","a","b","c","findLocation","Square","props","className","onClick","value","Board","this","handleClick","id","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","location","xIsNext","slice","squaresCopy","currentLocation","setState","concat","index","j","squaresOne","squaresTwo","console","log","k","differenceBetween","status","current","winner","isTied","isGameTied","moves","map","item","desc","jumpTo","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53919cf7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst calculateWinner = (squares) => {\n  // console.log(squares)\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst isGameTied = (squares) => {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] === null) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst findLocation = (i) => {\n  if (i === 0 || i === 1 || i === 2) {\n    const location = [0, i - 0]\n    return location;\n  } else if (i === 3 || i === 4 || i === 5) {\n    const location = [1, i - 3]\n    return location;\n  } else {\n    const location = [2, i - 6];\n    return location;\n  }\n}\n\nconst differenceBetween = (i, j, history) => {\n  // console.log(i, j, history);\n  const squaresOne = history[i].squares;\n  const squaresTwo = history[j].squares;\n  console.log(squaresOne, squaresTwo);\n  for (let k = 0; k < squaresOne.length; k++) {\n    if (squaresOne[k] !== squaresTwo[k]) {\n      return k;\n    }\n  }\n}\n\nconst Square = (props) => {\n  return (\n    <button className=\"square\" onClick={props.onClick}>{props.value}</button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.handleClick(i)} />\n  }\n\n  render() {\n\n\n    return (\n      <div id=\"grid\">\n        {/* <div id=\"header\">\n          <h1 className=\"h1\">{status}</h1>\n        </div> */}\n        {/* <div> */}\n        {/* <div> */}\n        {this.renderSquare(0)}\n        {this.renderSquare(1)}\n        {this.renderSquare(2)}\n        {/* </div> */}\n        {/* <div> */}\n        {this.renderSquare(3)}\n        {this.renderSquare(4)}\n        {this.renderSquare(5)}\n        {/* </div> */}\n        {/* <div> */}\n        {this.renderSquare(6)}\n        {this.renderSquare(7)}\n        {this.renderSquare(8)}\n        {/* </div> */}\n        {/* </div> */}\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      location: [0, 0],\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squaresCopy = current.squares.slice();\n    if (calculateWinner(squaresCopy) || squaresCopy[i]) {\n      return;\n    }\n    squaresCopy[i] = this.state.xIsNext ? 'X' : 'O';\n    const currentLocation = findLocation(i);\n    // console.log(squaresCopy);\n    this.setState({\n      history: history.concat([{\n        squares: squaresCopy,\n      }]),\n      stepNumber: this.state.stepNumber + 1,\n      location: currentLocation,\n      xIsNext: !this.state.xIsNext,\n    })\n  }\n\n  reset() {\n    this.setState({\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      location: [0, 0],\n      xIsNext: true,\n    })\n  }\n\n  jumpTo(i) {\n    const history = this.state.history.slice();\n    if (i === 0) {\n      const currentLocation = [0, 0]\n      this.setState({\n        stepNumber: i,\n        location: currentLocation,\n        xIsNext: i % 2 === 0 ? true : false,\n      })\n    } else {\n      const index = differenceBetween(i, i - 1, history);\n      const currentLocation = findLocation(index);\n      this.setState({\n        stepNumber: i,\n        location: currentLocation,\n        xIsNext: i % 2 === 0 ? true : false,\n      })\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    // console.log(this.state.stepNumber)\n    const winner = calculateWinner(current.squares);\n    const isTied = isGameTied(current.squares);\n\n    let status;\n    if (winner) {\n      status = \"Winner \" + winner;\n    } else if (isTied) {\n      status = \"Game Tied\";\n    }\n    else {\n      status = \"Next move: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    let moves = history.map((item, i) => {\n\n      const desc = i === 0 ? \"Go to start\" : \"Go to step \" + i;\n\n      return <li key={i}>\n        <button className=\"step-btn\" onClick={() => this.jumpTo(i)}>{desc}</button>\n\n      </li>\n    });\n\n    const location = this.state.location;\n\n    return (\n      <div id=\"main-container\">\n        <div id=\"content\">\n        <div id=\"container1\">\n          <div id=\"header\">\n            <div>\n              <div className=\"h1\">{status}</div>\n            </div>\n          </div>\n          <div id=\"location\">{`${location[0]}, ${location[1]}`}\n          </div>\n          <div id=\"board\">\n            <Board\n              squares={current.squares}\n              handleClick={(i) => this.handleClick(i)}\n            />\n          </div>\n        </div>\n        <div id=\"container2\">\n          <div className=\"side-h1\">Moves</div>\n          <div id=\"side-bar\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n        </div>\n        <div className=\"footer\">\n          <button className=\"btn\" onClick={() => this.reset()} >Reset</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}